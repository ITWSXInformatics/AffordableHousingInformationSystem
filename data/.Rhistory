setwd("C:/Users/ganzk/Downloads")
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
setwd("C:/Users/ganzk/Downloads")
library(tidyverse)
?list.files
for (year in 2017:2021) {
f <- list.files(pattern = str_c("FY", as.character(year)))
print(f)
}
setwd("~/Classes/ERTH 4400/project/data/hud")
for (year in 2017:2021) {
f <- list.files(pattern = str_c("FY", as.character(year)))
print(f)
}
for (year in 2017:2021) {
f <- list.files(pattern = str_c("FY", as.character(year)))
print(f)
this_df <- read_excel(f)
this_df$year <- year
if (is.na(df)) {
df <- this_df
} else {
df <- rbind(df, this_df)
}
}
View(this_df)
is.na(this_df)
is.null(df)
df <- NULL
for (year in 2017:2021) {
f <- list.files(pattern = str_c("FY", as.character(year)))
print(f)
this_df <- read_excel(f)
this_df$year <- year
if (is.null(df)) {
df <- this_df
} else {
df <- rbind(df, this_df)
}
}
?rbind
View(df)
View(this_df)
library(janitor)
?select
df <- NULL
for (year in 2017:2021) {
f <- list.files(pattern = str_c("FY", as.character(year)))
print(f)
this_df <- read_excel(f) %>%
clean_names()
if ("fips2000" %in% colnames(this_df)) {
this_df <- this_df %>%
select(-fips2000)
}
this_df$year <- year
if (is.null(df)) {
df <- this_df
} else {
df <- rbind(df, this_df)
}
}
View(df)
View(this_df)
# there's only 5 spreadsheets and they all have specific
# inconsistencies that mean we have to do this manually
hud_2017 <- read_excel("FY2017_50_rev.xlsx") %>%
clean_names()
View(hud_2017)
# there's only 5 spreadsheets and they all have specific
# inconsistencies that mean we have to do this manually
hud_2017 <- read_excel("FY2017_50_rev.xlsx") %>%
clean_names() %>%
select(-fips2000)
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names()
View(hud_2018)
?rename
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub18,
areaname = areaname18,
countyname = cntyname,
county_town_name = name)
rbind(hud_2017, hud_2018)
setdiff(colnames(hud_2017), colnames(hud_2018))
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub18,
areaname = areaname18,
countyname = cntyname,
county_town_name = name,
cousub = cou_sub)
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub18,
areaname = areaname18,
countyname = cntyname,
county_town_name = name,
cou_sub = cousub)
rbind(hud_2017, hud_2018)
hud_2019 <- read_excel("FY2019_50_County_rev.xlsx") %>%
clean_names()
View(hud_2019)
# there's only 5 spreadsheets and they all have specific
# inconsistencies that mean we have to do this manually
hud_2017 <- read_excel("FY2017_50_rev.xlsx") %>%
clean_names() %>%
select(-fips2000) %>%
rename(cntyname=countyname,
name=county_town_name,
cousub=cou_sub)
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub18,
areaname = areaname18)
rbind(hud_2017, hud_2018)
hud_2019 <- read_excel("FY2019_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub19,
areaname = areaname19)
rbind(hud_2018, hud_2019)
hud_2020 <- read_excel("FY2020_50_County_rev.xlsx") %>%
clean_names()
View(hud_2020)
# there's only 5 spreadsheets and they all have specific
# inconsistencies that mean we have to do this manually
hud_2017 <- read_excel("FY2017_50_rev.xlsx") %>%
clean_names() %>%
select(-fips2000) %>%
rename(cntyname=countyname,
name=county_town_name,
cousub=cou_sub) %>%
mutate(pop2017 = NA,
hu2017  = NA)
hud_2018 <- read_excel("FY2018_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub18,
areaname = areaname18) %>%
mutate(pop2017 = NA,
hu2017  = NA)
hud_2019 <- read_excel("FY2019_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub  = cbsasub19,
areaname = areaname19) %>%
mutate(pop2017 = NA,
hu2017  = NA)
hud_2020 <- read_excel("FY2020_50_County_rev.xlsx") %>%
clean_names() %>%
mutate(pop2010 = NA,
hu2017  = NA)
hud_2020 <- read_excel("FY2020_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub = cbsasub20,
areaname = areaname20) %>%
mutate(pop2010 = NA,
hu2017  = NA)
rbind(hud_2019, hud_2020)
setdiff(colnames(hud_2019), colnames(hud_2020))
hud_2020 <- read_excel("FY2020_50_County_rev.xlsx") %>%
clean_names() %>%
rename(cbsasub = cbsasub20,
areaname = areaname20) %>%
mutate(pop2010 = NA,
hu2010  = NA)
rbind(hud_2019, hud_2020)
hud_2021 <- read_excel("FY2021_50_County.xlsx") %>%
clean_names() %>%
rename(cbsasub = cbsasub21,
areaname = areaname21)
View(hud_2021)
hud_2021 <- read_excel("FY2021_50_County.xlsx") %>%
clean_names() %>%
rename(cbsasub = cbsasub21,
areaname = areaname21) %>%
mutate(pop2010 = NA,
hu2010 = NA)
ls("hud*")
ls("hud")
ls("hud_2021")
ls(pattern="hud")
get("hud_2017")
# row-bind everything together
hud_all <- rbind(get(ls(pattern="hud")))
source('~/.active-rstudio-document', echo=TRUE)
View(hud_all)
sum(hud_all$cntyname != hud_all$name)
# row-bind everything together
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county)
table(hud_all$cousub)
ggplot(hud_all, aes(x=cousub)) + geom_histogram()
ggplot(hud_all, aes(x=cousub)) + geom_histogram(stat="count")
# row-bind everything together
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = fips2010 %/% 100000)
# row-bind everything together
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000)
hud_all %>%
length(unique(hud_all$fipsalt))
hud_all %>%
filter(year == 2017) %>%
group_by(fipsalt) %>%
summarize(n=n()) %>% arrange(-n)
hud_all %>%
filter(year==2017, fipsalt=23003)
filter(year==2017, fipsalt==23003)
hud_all %>%
filter(year==2017, fipsalt==23003)
hud_all %>%
filter(year==2017, fipsalt==23003) %>%
View()
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4))
View(hud_2021)
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
areaname = mode(areaname),
cntyname = mode(cntyname))
?summarize
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
areaname = n_distinct(areaname),
cntyname = n_distinct(cntyname))
unique(hud_all$areaname)
unique(hud_all$cntyname)
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
areaname = first(areaname),
cntyname = first(cntyname))
?spread
?pivot_wider
parse_number("rent_0br")
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
areaname = first(areaname),
cntyname = first(cntyname)) %>%
rename(fips=fipsalt) %>%
gather(key="bedrooms", value="rent", contains("rent_"))
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
select(-name, -cbsasub, -state, -county) %>%
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
areaname = first(areaname),
cntyname = first(cntyname)) %>%
rename(fips=fipsalt) %>%
gather(key="bedrooms", value="rent", contains("rent_")) %>%
mutate(bedrooms = parse_number(bedrooms))
setwd("~/Classes/ERTH 4400/project/data/hud")
# save it out
write_csv(hud_all, "hud_median_rent_county_all.csv")
View(hud_all)
max(hud_all$fips)
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
# discard these - either duplicate or unneeded info
select(-name, -cbsasub, -state, -county) %>%
# discard subcounty number from FIPS code
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
# Take means across subcounties
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
# some info is discarded from areaname, but the county
# names are all unique
areaname = first(areaname),
cntyname = first(cntyname)) %>%
rename(fips=fipsalt) %>%
# pivot the table longer
gather(key="bedrooms", value="rent", contains("rent_")) %>%
mutate(bedrooms = parse_number(bedrooms),
fips = str_pad(fips, 5, side="left", pad="0"))
# save it out
write_csv(hud_all, "hud_median_rent_county_all.csv")
View(hud_all)
?pivot_longer
pivot_longer(hud_all, c(year, bedrooms), names_to="names", values_to ="values")
?pivot_wider
pivot_wider(hud_all, c(year, fips, bedrooms))
?spread
pivot_wider(hud_all, names_from=bedrooms, values_from=rent)
pivot_wider(hud_all, names_from=bedrooms, values_from=rent, names_prefix="br")
pivot_wider(hud_all, names_from=bedrooms, values_from=rent, names_prefix="br") %>%
pivot_wider(names_from=year, values_from=br0:br4, names_prefix="yr", names_glue="_")
?pivot_wider
pivot_wider(hud_all, names_from=bedrooms, values_from=rent, names_prefix="br") %>%
pivot_wider(names_from=year, values_from=br0:br4, names_prefix="yr", names_sep="_")
# row-bind everything together, take the mean across subcounties
hud_all <- rbind(hud_2017,
hud_2018,
hud_2019,
hud_2020,
hud_2021) %>%
# discard these - either duplicate or unneeded info
select(-name, -cbsasub, -state, -county) %>%
# discard subcounty number from FIPS code
mutate(fipsalt = as.numeric(fips2010) %/% 100000) %>%
# Take means across subcounties
group_by(year, fipsalt) %>%
summarize(rent_0br = mean(rent50_0),
rent_1br = mean(rent50_1),
rent_2br = mean(rent50_2),
rent_3br = mean(rent50_3),
rent_4br = mean(rent50_4),
# some info is discarded from areaname, but the county
# names are all unique
areaname = first(areaname),
cntyname = first(cntyname)) %>%
rename(fips=fipsalt) %>%
# pivot the table longer then wider to standardize columns
gather(key="bedrooms", value="rent", contains("rent_")) %>%
mutate(bedrooms = parse_number(bedrooms),
fips = str_pad(fips, 5, side="left", pad="0")) %>%
pivot_wider(names_from=bedrooms, values_from=rent, names_prefix="br") %>%
pivot_wider(names_from=year, values_from=br0:br4, names_prefix="yr", names_sep="_")
getwd()
# save it out
write_csv(hud_all, "hud_median_rent_county_all.csv")
setwd("~/Classes/ERTH 4400/project/data")
source('~/Classes/ERTH 4400/project/scripts/clean_hud_data.R', echo=TRUE)
library(sf)
counties <- st_read("us_counties_zip.goejson")
setwd("~/Classes/ERTH 4400/project/data")
counties <- st_read("us_counties_zip.geojson")
length(unique(hud_all$fips))
View(counties)
counties_hud <- inner_join(hud_all, counties, by=c("fips"="FIPS"))
View(counties_hud)
counties_hud <- inner_join(hud_all, counties, by=c("fips"="FIPS")) %>%
clean_names()
st_write(counties_hud, "us_counties_hud_zip.geojson")
library(shiny)
library(leaflet)
install.packages("leaflet")
rm(list=ls())
setwd("~/Classes/ERTH 4400/project/data")
library(sf)
polys <- st_read("us_counties_hud_zip.geojson")
library(shiny)
library(leaflet)
library(sf)
r_colors <- rgb(t(col2rgb(colors()) / 255))
names(r_colors) <- colors()
mbox_token <- "pk.eyJ1IjoiZ2FuemtlZW5hbiIsImEiOiJja21qbDZuMTIwczk1MnZsOGljbjQ4aGN5In0.H-bMGsulaQ65tHeNEm0O6g"
polys <- st_read("us_counties_hud_zip.geojson")
ui <- fluidPage(
leafletOutput("mymap")
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?colorBin
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?leaflet
runApp('~/Classes/ERTH 4400/project/scripts/shiny_demo.R')
setwd("~/Classes/ERTH 4400/project/data")
runApp('~/Classes/ERTH 4400/project/scripts/shiny_demo.R')
getwd()
runApp('~/Classes/ERTH 4400/project/scripts/shiny_demo.R')
runApp('~/Classes/ERTH 4400/project/scripts/shiny_demo.R')
